{
  "contractName": "KajuswapFactory",
  "abi": [
    {
      "inputs": [],
      "name": "IdenticalAddresses",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PairExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IdenticalAddresses\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PairExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/KajuswapFactory.sol\":\"KajuswapFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x0240f7703cff32a61ee3e9fbb339e09a944260432a9ef37debf3692b1a6c8049\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2d8b0c0158b1952a87c327d506a645040924a94c8f9f937184659f8a8e3b0759\",\"dweb:/ipfs/QmZ9rGdkjRCk8zfr4xeH7Jh88tkWJNt9LvG1o2GcCm7Uqa\"]},\"project:/contracts/KajuswapFactory.sol\":{\"keccak256\":\"0x096bace1ff93dbce16a89c253ad5f920e3a6e25ac4c6ea100a9da1d6934c4ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91957da761e34a0ef5746dcbd40090f571a1ab7a7453aa0a76f8fcc5f4fde45a\",\"dweb:/ipfs/QmXSKS4SdaJh83yECDia13PAkPT9DeVH2B5Ljw4XAywnGL\"]},\"project:/contracts/KajuswapPair.sol\":{\"keccak256\":\"0xc52f881110488595d72e04882898968ec6e51305364efe6253b68c571b3916b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4152852e68a87b38cd08a623dae8ad710ca15bf0c4c053d64366532a7c5c0034\",\"dweb:/ipfs/QmbPuh3yNme5YRdh99R71Rckjo6Zoka1s2shJvXgRKCExz\"]},\"project:/interfaces/IERC20.sol\":{\"keccak256\":\"0xfddbc94c05b2231e566768735ed117e6c5d3bea6821c6a05b6b532db5baaa2fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a70967baba86c464950fa9c805641c81f9e2713cff66c032b462f95893978c0\",\"dweb:/ipfs/QmRcGQATjEdZ92qSS9gTGUN1U241WPqH8RcERBdtFCSt5Q\"]},\"project:/interfaces/IKajuswapPair.sol\":{\"keccak256\":\"0x11ec5ca2c43764f52e7ecbec39bd1ef8b140be38d2699fb0f6b014e0c0d96dfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee603c0dafb98d03c96ea7bec88dbba7d3655ae709e1bf22788e3dae3f084430\",\"dweb:/ipfs/QmRTto16LKxfQmes6vXfKmDEgnccF1c3G9yoCpBcC1JK2A\"]},\"project:/libraries/Math.sol\":{\"keccak256\":\"0xd91f09c6569f7989eb006db1ec29c688e118239de9b98bad60a6b08e41ab59d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d18380e0f81132f4b0b0ee6d3549fe58dfa1de836d05335ac8b8414dc701782c\",\"dweb:/ipfs/QmTNxGUGaCQNDoSgk7asoUAf754DNRJPyqmw4fCEcPfJ6A\"]},\"project:/libraries/UQ112x112.sol\":{\"keccak256\":\"0x14a9a343f945c5e664cd7fafadb588ebd81b4927697e5c22aeaeed38df6c1cd2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a9c27a3be17d533fd9c19a74eb943659f8c882701699b2b3713d88af7091a9fa\",\"dweb:/ipfs/QmXVYoPGBnPxXhnbr8JxkHgjeJ8HZNDjtyd1L5xNYEJ45q\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50614157806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000465760003560e01c80631e3dd18b146200004b57806369454b861462000081578063c9c6539614620000b7575b600080fd5b620000696004803603810190620000639190620006f9565b620000ed565b60405162000078919062000770565b60405180910390f35b6200009f6004803603810190620000999190620007be565b6200012d565b604051620000ae919062000770565b60405180910390f35b620000d56004803603810190620000cf9190620007be565b6200016f565b604051620000e4919062000770565b60405180910390f35b60018181548110620000fe57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001d7576040517fbd969eb000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200021657838562000219565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000284576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000386576040517f3d77e89100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051806020016200039a90620006ab565b6020820181038252601f19601f82011660405250905060008383604051602001620003c792919062000855565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b81526004016200042892919062000885565b600060405180830381600087803b1580156200044357600080fd5b505af115801562000458573d6000803e3d6000fd5b50505050846000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e98760018054905060405162000699929190620008c3565b60405180910390a35050505092915050565b61383180620008f183390190565b600080fd5b6000819050919050565b620006d381620006be565b8114620006df57600080fd5b50565b600081359050620006f381620006c8565b92915050565b600060208284031215620007125762000711620006b9565b5b60006200072284828501620006e2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000758826200072b565b9050919050565b6200076a816200074b565b82525050565b60006020820190506200078760008301846200075f565b92915050565b62000798816200074b565b8114620007a457600080fd5b50565b600081359050620007b8816200078d565b92915050565b60008060408385031215620007d857620007d7620006b9565b5b6000620007e885828601620007a7565b9250506020620007fb85828601620007a7565b9150509250929050565b60008160601b9050919050565b60006200081f8262000805565b9050919050565b6000620008338262000812565b9050919050565b6200084f62000849826200074b565b62000826565b82525050565b60006200086382856200083a565b6014820191506200087582846200083a565b6014820191508190509392505050565b60006040820190506200089c60008301856200075f565b620008ab60208301846200075f565b9392505050565b620008bd81620006be565b82525050565b6000604082019050620008da60008301856200075f565b620008e96020830184620008b2565b939250505056fe60e06040523480156200001157600080fd5b506040518060400160405280600d81526020017f4b616a75737761702050616972000000000000000000000000000000000000008152506040518060400160405280600481526020017f4b414a5500000000000000000000000000000000000000000000000000000000815250601282600090805190602001906200009892919062000178565b508160019080519060200190620000b192919062000178565b508060ff1660808160ff16815250504660a08181525050620000d8620000e860201b60201c565b60c0818152505050505062000428565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516200011c919062000337565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646306040516020016200015d959493929190620003cb565b60405160208183030381529060405280519060200120905090565b828054620001869062000257565b90600052602060002090601f016020900481019282620001aa5760008555620001f6565b82601f10620001c557805160ff1916838001178555620001f6565b82800160010185558215620001f6579182015b82811115620001f5578251825591602001919060010190620001d8565b5b50905062000205919062000209565b5090565b5b80821115620002245760008160009055506001016200020a565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200027057607f821691505b60208210810362000286576200028562000228565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154620002bb8162000257565b620002c781866200028c565b94506001821660008114620002e55760018114620002f7576200032e565b60ff198316865281860193506200032e565b620003028562000297565b60005b83811015620003265781548189015260018201915060208101905062000305565b838801955050505b50505092915050565b6000620003458284620002ac565b915081905092915050565b6000819050919050565b620003658162000350565b82525050565b6000819050919050565b62000380816200036b565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003b38262000386565b9050919050565b620003c581620003a6565b82525050565b600060a082019050620003e260008301886200035a565b620003f160208301876200035a565b6200040060408301866200035a565b6200040f606083018562000375565b6200041e6080830184620003ba565b9695505050505050565b60805160a05160c0516133d9620004586000396000610903015260006108cf015260006108a901526133d96000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80636a627842116100b857806395d89b411161007c57806395d89b4114610392578063a9059cbb146103b0578063d21220a7146103e0578063d505accf146103fe578063dd62ed3e1461041a578063fff6cae91461044a57610142565b80636a627842146102b55780636d9a640a146102e557806370a08231146103015780637ecebe001461033157806389afcb441461036157610142565b806323b872dd1161010a57806323b872dd146101f1578063313ce567146102215780633644e5151461023f578063485cc9551461025d5780635909c0d5146102795780635a3d54931461029757610142565b806306fdde03146101475780630902f1ac14610165578063095ea7b3146101855780630dfe1681146101b557806318160ddd146101d3575b600080fd5b61014f610454565b60405161015c9190612702565b60405180910390f35b61016d6104e2565b60405161017c9392919061276c565b60405180910390f35b61019f600480360381019061019a919061283c565b61053f565b6040516101ac9190612897565b60405180910390f35b6101bd610631565b6040516101ca91906128c1565b60405180910390f35b6101db610657565b6040516101e891906128eb565b60405180910390f35b61020b60048036038101906102069190612906565b61065d565b6040516102189190612897565b60405180910390f35b6102296108a7565b6040516102369190612975565b60405180910390f35b6102476108cb565b60405161025491906129a9565b60405180910390f35b610277600480360381019061027291906129c4565b610928565b005b610281610a92565b60405161028e91906128eb565b60405180910390f35b61029f610a98565b6040516102ac91906128eb565b60405180910390f35b6102cf60048036038101906102ca9190612a04565b610a9e565b6040516102dc91906128eb565b60405180910390f35b6102ff60048036038101906102fa9190612a31565b610e01565b005b61031b60048036038101906103169190612a04565b6113a5565b60405161032891906128eb565b60405180910390f35b61034b60048036038101906103469190612a04565b6113bd565b60405161035891906128eb565b60405180910390f35b61037b60048036038101906103769190612a04565b6113d5565b604051610389929190612a84565b60405180910390f35b61039a61187e565b6040516103a79190612702565b60405180910390f35b6103ca60048036038101906103c5919061283c565b61190c565b6040516103d79190612897565b60405180910390f35b6103e8611a20565b6040516103f591906128c1565b60405180910390f35b61041860048036038101906104139190612b05565b611a46565b005b610434600480360381019061042f91906129c4565b611d3f565b60405161044191906128eb565b60405180910390f35b610452611d64565b005b6000805461046190612bd6565b80601f016020809104026020016040519081016040528092919081815260200182805461048d90612bd6565b80156104da5780601f106104af576101008083540402835291602001916104da565b820191906000526020600020905b8154815290600101906020018083116104bd57829003601f168201915b505050505081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166008601c9054906101000a900463ffffffff16925092509250909192565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161061f91906128eb565b60405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107935782816107129190612c36565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107e29190612c36565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161089391906128eb565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000004614610901576108fc611f44565b610923565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b600073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415806109d55750600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15610a0c576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60095481565b600a5481565b6000600b60009054906101000a900460ff1615610af0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae790612cdc565b60405180910390fd5b6001600b60006101000a81548160ff021916908315150217905550600080610b166104e2565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b7891906128c1565b6020604051808303816000875af1158015610b97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbb9190612d11565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c1a91906128c1565b6020604051808303816000875af1158015610c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5d9190612d11565b90506000846dffffffffffffffffffffffffffff1683610c7d9190612c36565b90506000846dffffffffffffffffffffffffffff1683610c9d9190612c36565b9050600060025403610cde576103e8610cc08284610cbb9190612d3e565b611fd0565b610cca9190612c36565b9650610cd960006103e861204a565b610d3b565b610d38866dffffffffffffffffffffffffffff1660025484610d009190612d3e565b610d0a9190612dc7565b866dffffffffffffffffffffffffffff1660025484610d299190612d3e565b610d339190612dc7565b61211a565b96505b60008711610d75576040517fd226f9d400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d7f888861204a565b610d8b84848888612133565b8773ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f8383604051610dd3929190612a84565b60405180910390a25050505050506000600b60006101000a81548160ff021916908315150217905550919050565b600b60009054906101000a900460ff1615610e51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4890612cdc565b60405180910390fd5b6001600b60006101000a81548160ff021916908315150217905550600083148015610e7c5750600082145b15610eb3576040517f42301c2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080610ebe6104e2565b5091509150816dffffffffffffffffffffffffffff16851180610ef05750806dffffffffffffffffffffffffffff1684115b15610f27576040517fbb55fd2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000851115610f5e57610f5d600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684876123d7565b5b6000841115610f9557610f94600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684866123d7565b5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ff291906128c1565b6020604051808303816000875af1158015611011573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110359190612d11565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161109491906128c1565b6020604051808303816000875af11580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d79190612d11565b9050600087600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166111139190612c36565b8311611120576000611164565b87600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166111589190612c36565b836111639190612c36565b5b90506000876008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166111a09190612c36565b83116111ad5760006111f1565b876008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166111e59190612c36565b836111f09190612c36565b5b90506000821480156112035750600081145b1561123a576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006003836112499190612d3e565b6103e8866112579190612d3e565b6112619190612c36565b905060006003836112729190612d3e565b6103e8866112809190612d3e565b61128a9190612c36565b9050620f4240876dffffffffffffffffffffffffffff16896dffffffffffffffffffffffffffff166112bc9190612d3e565b6112c69190612d3e565b81836112d29190612d3e565b101561130a576040517fbd8bc36400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61131686868a8a612133565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f2a9237ff5aa599ef4c5ee4b1142b53429d5755e2685fe6288b2e3320202115f58d8d604051611375929190612a84565b60405180910390a350505050505050506000600b60006101000a81548160ff021916908315150217905550505050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b600080600b60009054906101000a900460ff1615611428576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141f90612cdc565b60405180910390fd5b6001600b60006101000a81548160ff0219169083151502179055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114a091906128c1565b6020604051808303816000875af11580156114bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e39190612d11565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161154291906128c1565b6020604051808303816000875af1158015611561573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115859190612d11565b90506000600360003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060025483826115da9190612d3e565b6115e49190612dc7565b945060025482826115f59190612d3e565b6115ff9190612dc7565b935060008514806116105750600084145b15611647576040517f749383ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611651308261253f565b61167e600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1687876123d7565b6116ab600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1687866123d7565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161170691906128c1565b6020604051808303816000875af1158015611725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117499190612d11565b9250600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016117a691906128c1565b6020604051808303816000875af11580156117c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e99190612d11565b91506000806117f66104e2565b509150915061180785858484612133565b3373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d8193649688888b60405161185193929190612df8565b60405180910390a250505050506000600b60006101000a81548160ff021916908315150217905550915091565b6001805461188b90612bd6565b80601f01602080910402602001604051908101604052809291908181526020018280546118b790612bd6565b80156119045780601f106118d957610100808354040283529160200191611904565b820191906000526020600020905b8154815290600101906020018083116118e757829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461195d9190612c36565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611a0e91906128eb565b60405180910390a36001905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611a89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8090612e7b565b60405180910390fd5b60006001611a956108cb565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b604051602001611b1d96959493929190612e9b565b60405160208183030381529060405280519060200120604051602001611b44929190612f74565b6040516020818303038152906040528051906020012085858560405160008152602001604052604051611b7a9493929190612fab565b6020604051602081039080840390855afa158015611b9c573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611c1057508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611c4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c469061303c565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051611d2e91906128eb565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600b60009054906101000a900460ff1615611db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dab90612cdc565b60405180910390fd5b6001600b60006101000a81548160ff021916908315150217905550600080611dda6104e2565b5091509150611f25600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611e3d91906128c1565b6020604051808303816000875af1158015611e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e809190612d11565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611edb91906128c1565b6020604051808303816000875af1158015611efa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1e9190612d11565b8484612133565b50506000600b60006101000a81548160ff021916908315150217905550565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611f7691906130fb565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001611fb5959493929190613112565b60405160208183030381529060405280519060200120905090565b600060038211156120375781905060006001600284611fef9190612dc7565b611ff99190613165565b90505b818110156120315780915060028182856120169190612dc7565b6120209190613165565b61202a9190612dc7565b9050611ffc565b50612045565b6000821461204457600190505b5b919050565b806002600082825461205c9190613165565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161210e91906128eb565b60405180910390a35050565b6000818310612129578161212b565b825b905092915050565b6dffffffffffffffffffffffffffff801684118061216057506dffffffffffffffffffffffffffff801683115b15612197576040517f89560ca100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008601c9054906101000a900463ffffffff164203905060008163ffffffff161180156121d657506000836dffffffffffffffffffffffffffff16115b80156121f257506000826dffffffffffffffffffffffffffff16115b156122d4578063ffffffff166122378461220b8561260f565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661264390919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16026009600082825401925050819055508063ffffffff166122a5836122798661260f565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661264390919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602600a600082825401925050819055505b5083600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550826008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550426008601c6101000a81548163ffffffff021916908363ffffffff1602179055507fcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166040516123c99291906131f6565b60405180910390a150505050565b6000808473ffffffffffffffffffffffffffffffffffffffff16848460405160240161240492919061321f565b6040516020818303038152906040527fa9059cbb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161248e9190613284565b6000604051808303816000865af19150503d80600081146124cb576040519150601f19603f3d011682016040523d82523d6000602084013e6124d0565b606091505b5091509150811580612501575060008151141580156125005750808060200190518101906124fe91906132c7565b155b5b15612538576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461258e9190612c36565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161260391906128eb565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff1661263c919061331c565b9050919050565b6000816dffffffffffffffffffffffffffff16836126619190613372565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156126a3578082015181840152602081019050612688565b838111156126b2576000848401525b50505050565b6000601f19601f8301169050919050565b60006126d482612669565b6126de8185612674565b93506126ee818560208601612685565b6126f7816126b8565b840191505092915050565b6000602082019050818103600083015261271c81846126c9565b905092915050565b60006dffffffffffffffffffffffffffff82169050919050565b61274781612724565b82525050565b600063ffffffff82169050919050565b6127668161274d565b82525050565b6000606082019050612781600083018661273e565b61278e602083018561273e565b61279b604083018461275d565b949350505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006127d3826127a8565b9050919050565b6127e3816127c8565b81146127ee57600080fd5b50565b600081359050612800816127da565b92915050565b6000819050919050565b61281981612806565b811461282457600080fd5b50565b60008135905061283681612810565b92915050565b60008060408385031215612853576128526127a3565b5b6000612861858286016127f1565b925050602061287285828601612827565b9150509250929050565b60008115159050919050565b6128918161287c565b82525050565b60006020820190506128ac6000830184612888565b92915050565b6128bb816127c8565b82525050565b60006020820190506128d660008301846128b2565b92915050565b6128e581612806565b82525050565b600060208201905061290060008301846128dc565b92915050565b60008060006060848603121561291f5761291e6127a3565b5b600061292d868287016127f1565b935050602061293e868287016127f1565b925050604061294f86828701612827565b9150509250925092565b600060ff82169050919050565b61296f81612959565b82525050565b600060208201905061298a6000830184612966565b92915050565b6000819050919050565b6129a381612990565b82525050565b60006020820190506129be600083018461299a565b92915050565b600080604083850312156129db576129da6127a3565b5b60006129e9858286016127f1565b92505060206129fa858286016127f1565b9150509250929050565b600060208284031215612a1a57612a196127a3565b5b6000612a28848285016127f1565b91505092915050565b600080600060608486031215612a4a57612a496127a3565b5b6000612a5886828701612827565b9350506020612a6986828701612827565b9250506040612a7a868287016127f1565b9150509250925092565b6000604082019050612a9960008301856128dc565b612aa660208301846128dc565b9392505050565b612ab681612959565b8114612ac157600080fd5b50565b600081359050612ad381612aad565b92915050565b612ae281612990565b8114612aed57600080fd5b50565b600081359050612aff81612ad9565b92915050565b600080600080600080600060e0888a031215612b2457612b236127a3565b5b6000612b328a828b016127f1565b9750506020612b438a828b016127f1565b9650506040612b548a828b01612827565b9550506060612b658a828b01612827565b9450506080612b768a828b01612ac4565b93505060a0612b878a828b01612af0565b92505060c0612b988a828b01612af0565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612bee57607f821691505b602082108103612c0157612c00612ba7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612c4182612806565b9150612c4c83612806565b925082821015612c5f57612c5e612c07565b5b828203905092915050565b7f4b616a75737761703a20596f752063616e6e6f7420456e74657220696e20746860008201527f6520636f6e747261637400000000000000000000000000000000000000000000602082015250565b6000612cc6602a83612674565b9150612cd182612c6a565b604082019050919050565b60006020820190508181036000830152612cf581612cb9565b9050919050565b600081519050612d0b81612810565b92915050565b600060208284031215612d2757612d266127a3565b5b6000612d3584828501612cfc565b91505092915050565b6000612d4982612806565b9150612d5483612806565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612d8d57612d8c612c07565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612dd282612806565b9150612ddd83612806565b925082612ded57612dec612d98565b5b828204905092915050565b6000606082019050612e0d60008301866128dc565b612e1a60208301856128dc565b612e2760408301846128b2565b949350505050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b6000612e65601783612674565b9150612e7082612e2f565b602082019050919050565b60006020820190508181036000830152612e9481612e58565b9050919050565b600060c082019050612eb0600083018961299a565b612ebd60208301886128b2565b612eca60408301876128b2565b612ed760608301866128dc565b612ee460808301856128dc565b612ef160a08301846128dc565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000612f3d600283612efc565b9150612f4882612f07565b600282019050919050565b6000819050919050565b612f6e612f6982612990565b612f53565b82525050565b6000612f7f82612f30565b9150612f8b8285612f5d565b602082019150612f9b8284612f5d565b6020820191508190509392505050565b6000608082019050612fc0600083018761299a565b612fcd6020830186612966565b612fda604083018561299a565b612fe7606083018461299a565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000613026600e83612674565b915061303182612ff0565b602082019050919050565b6000602082019050818103600083015261305581613019565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461308981612bd6565b613093818661305c565b945060018216600081146130ae57600181146130bf576130f2565b60ff198316865281860193506130f2565b6130c885613067565b60005b838110156130ea578154818901526001820191506020810190506130cb565b838801955050505b50505092915050565b6000613107828461307c565b915081905092915050565b600060a082019050613127600083018861299a565b613134602083018761299a565b613141604083018661299a565b61314e60608301856128dc565b61315b60808301846128b2565b9695505050505050565b600061317082612806565b915061317b83612806565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156131b0576131af612c07565b5b828201905092915050565b6000819050919050565b60006131e06131db6131d684612724565b6131bb565b612806565b9050919050565b6131f0816131c5565b82525050565b600060408201905061320b60008301856131e7565b61321860208301846131e7565b9392505050565b600060408201905061323460008301856128b2565b61324160208301846128dc565b9392505050565b600081519050919050565b600061325e82613248565b613268818561305c565b9350613278818560208601612685565b80840191505092915050565b60006132908284613253565b915081905092915050565b6132a48161287c565b81146132af57600080fd5b50565b6000815190506132c18161329b565b92915050565b6000602082840312156132dd576132dc6127a3565b5b60006132eb848285016132b2565b91505092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613327826132f4565b9150613332836132f4565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561336757613366612c07565b5b828202905092915050565b600061337d826132f4565b9150613388836132f4565b92508261339857613397612d98565b5b82820490509291505056fea2646970667358221220f7897aa5b2d9c311b43da04b0d0557c132e764de5a78be7d25db5b4bf52ce52864736f6c634300080e0033a264697066735822122041df556fc4020d1d1c670719b1624a2c6e5b6a3dea723bbee84401d72ae03d4a64736f6c634300080e0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4033:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:11",
                "type": ""
              }
            ],
            "src": "7:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:11",
                "type": ""
              }
            ],
            "src": "334:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:11",
                "type": ""
              }
            ],
            "src": "417:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:11",
                "type": ""
              }
            ],
            "src": "545:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:11",
                "type": ""
              }
            ],
            "src": "690:329:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1080:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1095:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1102:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1091:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1080:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1052:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1062:7:11",
                "type": ""
              }
            ],
            "src": "1025:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1202:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1241:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1223:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1212:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1184:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1194:7:11",
                "type": ""
              }
            ],
            "src": "1157:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1324:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1341:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1364:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1346:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1334:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1334:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1312:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1319:3:11",
                "type": ""
              }
            ],
            "src": "1259:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1481:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1491:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1503:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1514:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1499:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1499:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1491:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1571:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1584:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1595:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1580:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1580:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1527:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1527:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1527:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1453:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1476:4:11",
                "type": ""
              }
            ],
            "src": "1383:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1654:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1711:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1720:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1723:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1713:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1713:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1713:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1677:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1702:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1684:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1684:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1674:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1674:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1667:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1664:63:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1647:5:11",
                "type": ""
              }
            ],
            "src": "1611:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1791:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1801:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1823:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1810:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1810:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1801:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1866:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1839:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1839:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1839:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1769:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1777:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1785:5:11",
                "type": ""
              }
            ],
            "src": "1739:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1967:391:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2013:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2015:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2015:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2015:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1988:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1997:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1984:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1984:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2009:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1980:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1980:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1977:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2106:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2121:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2135:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2125:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2150:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2185:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2196:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2181:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2181:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2205:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2160:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2160:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2150:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2233:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2248:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2262:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2252:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2278:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2313:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2324:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2309:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2309:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2333:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2288:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2288:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2278:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1929:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1940:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1952:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1960:6:11",
                "type": ""
              }
            ],
            "src": "1884:474:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2406:52:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2416:35:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2441:2:11",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2445:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "2437:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2437:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "2416:8:11"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2387:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "2397:8:11",
                "type": ""
              }
            ],
            "src": "2364:94:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2511:47:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2521:31:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2546:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "2532:13:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2532:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "2521:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2493:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "2503:7:11",
                "type": ""
              }
            ],
            "src": "2464:94:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2611:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2621:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2652:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2632:19:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2632:26:11"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "2621:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2593:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "2603:7:11",
                "type": ""
              }
            ],
            "src": "2564:100:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2753:74:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2770:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2813:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2795:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2795:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2775:19:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2775:45:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2763:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2763:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2763:58:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2741:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2748:3:11",
                "type": ""
              }
            ],
            "src": "2670:157:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2977:253:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3050:6:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3059:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2988:61:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2988:75:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2988:75:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3072:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3083:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3088:2:11",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3079:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3079:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3072:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3163:6:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3172:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3101:61:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3101:75:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3101:75:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3185:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3196:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3201:2:11",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3192:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3192:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3185:3:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3214:10:11",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "3221:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3214:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2948:3:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2954:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2962:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2973:3:11",
                "type": ""
              }
            ],
            "src": "2833:397:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3362:206:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3372:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3384:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3395:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3380:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3380:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3372:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3452:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3465:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3476:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3461:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3461:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3408:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3408:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3408:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3533:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3546:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3557:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3542:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3542:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3489:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3489:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3489:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3326:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3338:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3346:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3357:4:11",
                "type": ""
              }
            ],
            "src": "3236:332:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3639:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3656:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3679:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3661:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3661:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3649:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3649:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3649:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3627:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3634:3:11",
                "type": ""
              }
            ],
            "src": "3574:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3824:206:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3834:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3846:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3857:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3842:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3842:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3834:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3914:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3927:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3938:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3923:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3923:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3870:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3870:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3870:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3995:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4008:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4019:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4004:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4004:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3951:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3951:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3951:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3788:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3800:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3808:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3819:4:11",
                "type": ""
              }
            ],
            "src": "3698:332:11"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "136:1426:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "136:1426:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;321:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;254:60;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;495:1064;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;321:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;254:60::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;495:1064::-;581:12;625:6;615:16;;:6;:16;;;611:49;;640:20;;;;;;;;;;;;;;611:49;672:14;688;715:6;706:15;;:6;:15;;;:79;;770:6;778;706:79;;;738:6;746;706:79;671:114;;;;818:1;800:20;;:6;:20;;;796:46;;829:13;;;;;;;;;;;;;;796:46;890:1;857:35;;:5;:13;863:6;857:13;;;;;;;;;;;;;;;:21;871:6;857:21;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;853:60;;901:12;;;;;;;;;;;;;;853:60;926:21;950:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;926:55;;992:12;1034:6;1042;1017:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1007:43;;;;;;992:58;;1195:4;1184:8;1178:15;1173:2;1163:8;1159:17;1156:1;1148:52;1140:60;;1341:4;1327:30;;;1358:6;1366;1327:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:4;1386:5;:13;1392:6;1386:13;;;;;;;;;;;;;;;:21;1400:6;1386:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1449:4;1425:5;:13;1431:6;1425:13;;;;;;;;;;;;;;;:21;1439:6;1425:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1464:8;1478:4;1464:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1521:6;1501:50;;1513:6;1501:50;;;1529:4;1535:8;:15;;;;1501:50;;;;;;;:::i;:::-;;;;;;;;600:959;;;;495:1064;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:11:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:94::-;2397:8;2445:5;2441:2;2437:14;2416:35;;2364:94;;;:::o;2464:::-;2503:7;2532:20;2546:5;2532:20;:::i;:::-;2521:31;;2464:94;;;:::o;2564:100::-;2603:7;2632:26;2652:5;2632:26;:::i;:::-;2621:37;;2564:100;;;:::o;2670:157::-;2775:45;2795:24;2813:5;2795:24;:::i;:::-;2775:45;:::i;:::-;2770:3;2763:58;2670:157;;:::o;2833:397::-;2973:3;2988:75;3059:3;3050:6;2988:75;:::i;:::-;3088:2;3083:3;3079:12;3072:19;;3101:75;3172:3;3163:6;3101:75;:::i;:::-;3201:2;3196:3;3192:12;3185:19;;3221:3;3214:10;;2833:397;;;;;:::o;3236:332::-;3357:4;3395:2;3384:9;3380:18;3372:26;;3408:71;3476:1;3465:9;3461:17;3452:6;3408:71;:::i;:::-;3489:72;3557:2;3546:9;3542:18;3533:6;3489:72;:::i;:::-;3236:332;;;;;:::o;3574:118::-;3661:24;3679:5;3661:24;:::i;:::-;3656:3;3649:37;3574:118;;:::o;3698:332::-;3819:4;3857:2;3846:9;3842:18;3834:26;;3870:71;3938:1;3927:9;3923:17;3914:6;3870:71;:::i;:::-;3951:72;4019:2;4008:9;4004:18;3995:6;3951:72;:::i;:::-;3698:332;;;;;:::o",
  "source": "//SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.10;\r\n\r\nimport \"./KajuswapPair.sol\";\r\nimport \"../interfaces/IKajuswapPair.sol\";\r\n\r\ncontract KajuswapFactory {\r\n    error IdenticalAddresses();\r\n    error ZeroAddress();\r\n    error PairExists();\r\n\r\n    mapping(address => mapping(address => address)) public pairs;\r\n    address[] public allPairs;\r\n\r\n    event PairCreated(\r\n        address indexed token0,\r\n        address indexed token1,\r\n        address pair,\r\n        uint256\r\n    );\r\n\r\n    function createPair(address tokenA, address tokenB)\r\n        public\r\n        returns (address pair)\r\n    {\r\n        if (tokenA == tokenB) revert IdenticalAddresses();\r\n        (address token0, address token1) = tokenA < tokenB\r\n            ? (tokenA, tokenB)\r\n            : (tokenB, tokenA);\r\n        if (token0 == address(0)) revert ZeroAddress();\r\n        if (pairs[token0][token1] != address(0)) revert PairExists();\r\n\r\n        bytes memory bytecode = type(KajuswapPair).creationCode;\r\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1)); //sorted token addresses used as salt for consistency.\r\n        assembly {\r\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt) //Written in Yul. Used CREATE2 opcode as it doesn't uses external state(nonce) for generating addresses\r\n        }\r\n\r\n        IKajuswapPair(pair).initialize(token0, token1);\r\n\r\n        pairs[token0][token1] = pair;\r\n        pairs[token1][token0] = pair;\r\n        allPairs.push(pair);\r\n\r\n        emit PairCreated(token0, token1, pair, allPairs.length);\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\GIT\\kaju-swap\\ethereum\\contracts\\KajuswapFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/KajuswapFactory.sol",
    "exportedSymbols": {
      "AlreadyInitialized": [
        994
      ],
      "BalanceOverflow": [
        996
      ],
      "ERC20": [
        387
      ],
      "IERC20": [
        2449
      ],
      "IKajuswapPair": [
        2525
      ],
      "InsufficientInputAmount": [
        998
      ],
      "InsufficientLiquidity": [
        1000
      ],
      "InsufficientLiquidityBurned": [
        1002
      ],
      "InsufficientLiquidityMinted": [
        1004
      ],
      "InsufficientOutputAmount": [
        1006
      ],
      "InvalidK": [
        1008
      ],
      "KajuswapFactory": [
        529
      ],
      "KajuswapPair": [
        1789
      ],
      "Math": [
        2599
      ],
      "TransferFailed": [
        1010
      ],
      "UQ112x112": [
        2643
      ]
    },
    "id": 530,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 389,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:25:1"
      },
      {
        "absolutePath": "project:/contracts/KajuswapPair.sol",
        "file": "./KajuswapPair.sol",
        "id": 390,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 530,
        "sourceUnit": 1790,
        "src": "61:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/interfaces/IKajuswapPair.sol",
        "file": "../interfaces/IKajuswapPair.sol",
        "id": 391,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 530,
        "sourceUnit": 2526,
        "src": "91:41:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "KajuswapFactory",
        "contractDependencies": [
          1789
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 529,
        "linearizedBaseContracts": [
          529
        ],
        "name": "KajuswapFactory",
        "nameLocation": "145:15:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "bd969eb0",
            "id": 393,
            "name": "IdenticalAddresses",
            "nameLocation": "174:18:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "192:2:1"
            },
            "src": "168:27:1"
          },
          {
            "errorSelector": "d92e233d",
            "id": 395,
            "name": "ZeroAddress",
            "nameLocation": "207:11:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "218:2:1"
            },
            "src": "201:20:1"
          },
          {
            "errorSelector": "3d77e891",
            "id": 397,
            "name": "PairExists",
            "nameLocation": "233:10:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "243:2:1"
            },
            "src": "227:19:1"
          },
          {
            "constant": false,
            "functionSelector": "69454b86",
            "id": 403,
            "mutability": "mutable",
            "name": "pairs",
            "nameLocation": "309:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 529,
            "src": "254:60:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 402,
              "keyType": {
                "id": 398,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "262:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "254:47:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 401,
                "keyType": {
                  "id": 399,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "281:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "273:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 400,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "292:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 406,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "338:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 529,
            "src": "321:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 404,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "321:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 405,
              "nodeType": "ArrayTypeName",
              "src": "321:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
            "id": 416,
            "name": "PairCreated",
            "nameLocation": "361:11:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "399:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "383:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 410,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "432:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "416:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 412,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "457:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "449:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 414,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "472:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "372:114:1"
            },
            "src": "355:132:1"
          },
          {
            "body": {
              "id": 527,
              "nodeType": "Block",
              "src": "600:959:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 425,
                      "name": "tokenA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "615:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 426,
                      "name": "tokenB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "625:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "615:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 431,
                  "nodeType": "IfStatement",
                  "src": "611:49:1",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 428,
                        "name": "IdenticalAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "640:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "640:20:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 430,
                    "nodeType": "RevertStatement",
                    "src": "633:27:1"
                  }
                },
                {
                  "assignments": [
                    433,
                    435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 433,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "680:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 527,
                      "src": "672:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 432,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "672:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 435,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "696:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 527,
                      "src": "688:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "688:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 446,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 436,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "706:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 437,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "715:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "706:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 442,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 420,
                          "src": "770:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 443,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 418,
                          "src": "778:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 444,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "769:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "706:79:1",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 439,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 418,
                          "src": "738:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 440,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 420,
                          "src": "746:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 441,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "737:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "671:114:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 447,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "800:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "818:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "810:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 448,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "810:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "810:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "800:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 456,
                  "nodeType": "IfStatement",
                  "src": "796:46:1",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 453,
                        "name": "ZeroAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "829:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "829:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 455,
                    "nodeType": "RevertStatement",
                    "src": "822:20:1"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 457,
                          "name": "pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "857:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 459,
                        "indexExpression": {
                          "id": 458,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 433,
                          "src": "863:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "857:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 461,
                      "indexExpression": {
                        "id": 460,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "871:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "857:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "890:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "882:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "882:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "882:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "857:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 470,
                  "nodeType": "IfStatement",
                  "src": "853:60:1",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 467,
                        "name": "PairExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "901:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "901:12:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 469,
                    "nodeType": "RevertStatement",
                    "src": "894:19:1"
                  }
                },
                {
                  "assignments": [
                    472
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 472,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "939:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 527,
                      "src": "926:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 471,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "926:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 477,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 474,
                          "name": "KajuswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1789,
                          "src": "955:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_KajuswapPair_$1789_$",
                            "typeString": "type(contract KajuswapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_KajuswapPair_$1789_$",
                            "typeString": "type(contract KajuswapPair)"
                          }
                        ],
                        "id": 473,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "950:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "950:18:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_KajuswapPair_$1789",
                        "typeString": "type(contract KajuswapPair)"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "950:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "926:55:1"
                },
                {
                  "assignments": [
                    479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 479,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1000:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 527,
                      "src": "992:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 478,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "992:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 487,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 483,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "1034:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 484,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "1042:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 481,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1017:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1017:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1017:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 480,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1007:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1007:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "992:58:1"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1125:190:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1140:60:1",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1156:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1163:8:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1173:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1159:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1159:17:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1184:8:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1178:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1178:15:1"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1195:4:1"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1148:7:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1148:52:1"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1140:4:1"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 472,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1163:8:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 472,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1184:8:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 423,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1140:4:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 479,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1195:4:1",
                      "valueSize": 1
                    }
                  ],
                  "id": 488,
                  "nodeType": "InlineAssembly",
                  "src": "1116:199:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 493,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "1358:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 494,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1366:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 490,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "1341:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 489,
                          "name": "IKajuswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2525,
                          "src": "1327:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IKajuswapPair_$2525_$",
                            "typeString": "type(contract IKajuswapPair)"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1327:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IKajuswapPair_$2525",
                          "typeString": "contract IKajuswapPair"
                        }
                      },
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2479,
                      "src": "1327:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1327:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:46:1"
                },
                {
                  "expression": {
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 497,
                          "name": "pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "1386:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 500,
                        "indexExpression": {
                          "id": 498,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 433,
                          "src": "1392:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1386:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 501,
                      "indexExpression": {
                        "id": 499,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1400:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1386:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 502,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "1410:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1386:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 504,
                  "nodeType": "ExpressionStatement",
                  "src": "1386:28:1"
                },
                {
                  "expression": {
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 505,
                          "name": "pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "1425:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 508,
                        "indexExpression": {
                          "id": 506,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "1431:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1425:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 509,
                      "indexExpression": {
                        "id": 507,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "1439:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1425:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 510,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "1449:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1425:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "1425:28:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 516,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "1478:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 513,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "1464:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1464:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:19:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 520,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "1513:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 521,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1521:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 522,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "1529:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 523,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 406,
                          "src": "1535:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1535:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 519,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 416,
                      "src": "1501:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 526,
                  "nodeType": "EmitStatement",
                  "src": "1496:55:1"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 528,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "504:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 418,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "523:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 528,
                  "src": "515:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "539:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 528,
                  "src": "531:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "514:32:1"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "589:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 528,
                  "src": "581:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "580:14:1"
            },
            "scope": 529,
            "src": "495:1064:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 530,
        "src": "136:1426:1",
        "usedErrors": [
          393,
          395,
          397
        ]
      }
    ],
    "src": "32:1532:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xE356A6CbF6ECd4a571A957b5311Bd082eeE0447F",
      "transactionHash": "0xc1edb80e4458b680adf71b90350d1c0f9b70d56fe19b456b7722f69e79f03508"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-17T05:01:34.957Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}